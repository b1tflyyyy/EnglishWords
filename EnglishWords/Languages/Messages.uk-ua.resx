<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AmountCorrectTranslateWord" xml:space="preserve">
    <value>Кількість правильно перекладених слів:</value>
  </data>
  <data name="AmountIncorrectTranslateWord" xml:space="preserve">
    <value>Кількість неправильно перекладених слів:</value>
  </data>
  <data name="ChooseLearn" xml:space="preserve">
    <value>Спочатку оберіть режим вивчення:</value>
  </data>
  <data name="CorrectAnswer" xml:space="preserve">
    <value>Вірно! Так тримати!</value>
  </data>
  <data name="DoYouWantLoadVerbs" xml:space="preserve">
    <value>Чи бажаєте ви завантажити неправильні дієслова?</value>
  </data>
  <data name="DoYouWantLoadWords" xml:space="preserve">
    <value>У вас є збережені слова, можливо ви хочете завантажити та повторити їх?</value>
  </data>
  <data name="EndEnterVerbs" xml:space="preserve">
    <value>Вітаю! Ви завершили ввід дієслів :)</value>
  </data>
  <data name="EndEnterWords" xml:space="preserve">
    <value>Вітаю! Ви завершили ввід слів :)</value>
  </data>
  <data name="EndLearnWords" xml:space="preserve">
    <value>Ви завершили вивчення слів з такими результатами:</value>
  </data>
  <data name="EnterAmountVerbs" xml:space="preserve">
    <value>Введіть кількість дієслів, які ви хочете вивчити.</value>
  </data>
  <data name="EnterAmountWords" xml:space="preserve">
    <value>Введіть кількість слів, які ви хочете вивчити.</value>
  </data>
  <data name="EnterEnglishWord" xml:space="preserve">
    <value>Введіть слово на англійській мові:</value>
  </data>
  <data name="EnterFirstVerbForm" xml:space="preserve">
    <value>Введіть першу форму дієслова:</value>
  </data>
  <data name="EnterSecondVerbForm" xml:space="preserve">
    <value>Введіть другу форму дієслова:</value>
  </data>
  <data name="EnterThirdVerbForm" xml:space="preserve">
    <value>Введіть третю форму дієслова:</value>
  </data>
  <data name="EnterTranslate" xml:space="preserve">
    <value>Введіть переклад:</value>
  </data>
  <data name="EnterTranslateWordLearn" xml:space="preserve">
    <value>Введіть переклад слова</value>
  </data>
  <data name="ErrorNullInput" xml:space="preserve">
    <value>Схоже ви не ввели нічого.</value>
  </data>
  <data name="ErrorOrCountWordsOverflow" xml:space="preserve">
    <value>Мабуть ви ввели не число, або перевищили ліміт слів(500).</value>
  </data>
  <data name="GoLearn" xml:space="preserve">
    <value>Перейдемо до вивчення!</value>
  </data>
  <data name="Greating" xml:space="preserve">
    <value>Вітаємо!</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Вітаємо в програмі EnglishWords! </value>
  </data>
  <data name="IncorrectAnswer" xml:space="preserve">
    <value>Нажаль ви помилилися, правильна відповідь</value>
  </data>
  <data name="IncorrectMode" xml:space="preserve">
    <value>Мабуть ви ввели невірний режим!</value>
  </data>
  <data name="InputError" xml:space="preserve">
    <value>Схоже, ви помилилися з вводом)</value>
  </data>
  <data name="IrregularVerbs" xml:space="preserve">
    <value>verbs - вивчення неправильних дієслів</value>
  </data>
  <data name="LoadData" xml:space="preserve">
    <value>натисніть 0, якщо ви хочете завантажити данні</value>
  </data>
  <data name="NoLoadData" xml:space="preserve">
    <value>натисніть 1, якщо ви не хочете завантажити данні</value>
  </data>
  <data name="RepeatOrExit" xml:space="preserve">
    <value>Якщо ви бажаєте знов повторити цей режим, натисніть Enter, інакше натисніть будь яку клавішу.</value>
  </data>
  <data name="ToPayAttentionWords" xml:space="preserve">
    <value>Зверніть увагу на ці слова:</value>
  </data>
  <data name="TranslateWord" xml:space="preserve">
    <value>Переклад:</value>
  </data>
  <data name="TryAgain" xml:space="preserve">
    <value>Спробуйте ще раз :)</value>
  </data>
  <data name="WordInEnglishLanguage" xml:space="preserve">
    <value>Слово на англійській мові:</value>
  </data>
  <data name="Words" xml:space="preserve">
    <value>words - режим вивчення слів</value>
  </data>
</root>